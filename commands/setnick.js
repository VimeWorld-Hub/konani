const mysql = require('../libs/mysql')
const config = require('../config')
const vimeLibrary = require('../libs/vimelibrary')
const messages = require("../libs/messages");

const VimeLibrary = new vimeLibrary.User(config.vimeworld.dev_token)
const VimeUtils = new vimeLibrary.Utils()

module.exports.info = {
    name: 'setnick',
    usage: "<–Ω–∏–∫–Ω–µ–π–º>",
    aliases: ['setnick', '—Å–µ—Ç–Ω–∏–∫', '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–Ω–∏–∫', '—É–Ω–∏–∫'],
    description: '—Å–º–µ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞',
    permission: 1,
    enabled: true,
    sponsor: [],
    help: false
};

module.exports.run = async (context, delim, user) => {
    if (delim.length < 2) return context.reply(`üîé –í—ã –∑–∞–±—ã–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${delim[0]} <–Ω–∏–∫–Ω–µ–π–º>`)

    const symbols = delim[1].split('')
    if (!await messages.testUsername(delim[1]) && /[=]/.test((symbols.length >= 1) ? symbols[0] : '') === false) return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ª–∞—Ç–∏–Ω–∏—Ü—ã, —Ü–∏—Ñ—Ä –∏ _`)

    if ((symbols.length < 3 || symbols.length > 16) && symbols[0] !== "=")
        return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –æ—Ç 3-—Ö –¥–æ 16-–∏ —Å–∏–º–≤–æ–ª–æ–≤`)

    try {
        const player = await VimeLibrary.get(delim[1], "nick")
        if (!player[0]) return context.reply(`üîé –ò–≥—Ä–æ–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)

        const rank = (await VimeUtils.getRank(player[0].rank, config.vimeworld.dev_token)).prefix

        try {
            await mysql.execute("UPDATE users SET username=? WHERE id=?", [player[0].username, context.senderId])
        } catch (e) {
            console.error(e)
        }
        //TODO: –ø–æ—Ñ–∏–∫—Å–∏—Ç—å –∫–æ–º–∞–Ω–¥

        context.reply({
            message: `üì≤ –ù–∏–∫–Ω–µ–π–º —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω\n‚îî –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç: ${(rank.split('').length >= 1) ? `[${rank}] ` : ``}${player[0].username}`
        })
    } catch (e) {
        console.error(e)
        context.reply(`‚ö† –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n${e}`)
    }
};

module.exports.runPayload = async (context) => {
    try {
        await this.run(context, context.messagePayload.split(':'))
    } catch (e) {
        context.reply(`–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞`)
    }
};