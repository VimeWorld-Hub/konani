const VW = require('../libs/vimelibrary')
const config = require('../config')

const mysql = require('../libs/mysql')
const {Keyboard} = require("vk-io");

module.exports.info = {
    name: 'boost',
    usage: "<–∏–≥—Ä–æ–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª>",
    aliases: ['boost'],
    description: '–ø–æ–∏—Å–∫ –≤—Å–µ—Ö –±—É—Å—Ç–µ—Ä–æ–≤',
    permission: 2,
    enabled: true,
    sponsor: [],
    help: true
};

module.exports.run = async (context, delim) => {
    try {
        if (!delim) delim = context.text.split(" ")

        if (!delim || !delim[1]) return context.reply(`üîé –í—ã –∑–∞–±—ã–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${delim[0]} ${this.info.usage}`)

        let players = context.text.split(delim[0])[1].trim()

        const res = await mysql.execute('SELECT * FROM boosters WHERE usernames = ? LIMIT 50', [players])
        const list = []

        if (!res || res.length <= 0) {
            return context.send(`üßπ –ò–≥—Ä–æ–∫–∏ —á–∏—Å—Ç—ã`)
        }

        for (const m of res) {
            list.push(`https://vimetop.ru/matches#${m.matchId}`)
        }

        context.send({
            message: `ü§æ‚Äç‚ôÄÔ∏è–ú–∞—Ç—á–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ —ç—Ç–∏ –∏–≥—Ä–æ–∫–∏ (${res[0].date}-${res[res.length - 1].date}):\n\n` + list.join('\n') + `\n\nüìÉ –í—Å–µ–≥–æ: ${list.length}`,
            dont_parse_links: true,
            keyboard: Keyboard.builder()
                .textButton({
                    label: "–ë—É—Å—Ç",
                    payload: `addboosters:${players.replace(' ', ':')}`,
                    color: "negative"
                })
                .row()
                .textButton({
                    label: "–ù–µ—Ç –±—É—Å—Ç–∞",
                    payload: `removeboosters:${players.replace(' ', ':')}`,
                    color: "positive"
                })
                .inline()
        })
    } catch (e) {
        context.reply(`‚ö† –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n${e}`)
    }
}

module.exports.runPayload = async (context) => {
    const delim = context.messagePayload.split(':')
    this.run(context, delim)
}