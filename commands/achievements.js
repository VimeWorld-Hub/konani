const VW = require('../libs/vimelibrary')
const Mess = require('../libs/messages')
const config = require('../config')
const {Keyboard} = require('vk-io')
const messages = require("../libs/messages");

const VimeLibrary = new VW.Total(config.vimeworld.dev_token)
const VimeUtils = new VW.Utils()

module.exports.info = {
    name: 'achievements',
    usage: "<–∏–≥—Ä–æ–∫>",
    aliases: ['achievements', 'ach', '–∞—á–∏–≤–∫–∏', '–∞—á', '–¥–æ—Å', '–¥–æ—Å—Ç', '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è'],
    description: '–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞',
    permission: 1,
    enabled: true,
    sponsor: [],
    help: true
};

module.exports.run = async (context, params) => {
    try {
        if (!params || !params[1]) return context.reply(`üîé –í—ã –∑–∞–±—ã–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${params[0]} ${this.info.usage}`)

        const symbols = params[1].split('')
        if (!await messages.testUsername(params[1])) return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ª–∞—Ç–∏–Ω–∏—Ü—ã, —Ü–∏—Ñ—Ä –∏ _`)

        if ((symbols.length < 3 || symbols.length > 16) && symbols[0] !== "=")
            return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –æ—Ç 3-—Ö –¥–æ 16-–∏ —Å–∏–º–≤–æ–ª–æ–≤`)

        new Promise(() => {
            const player = VimeLibrary.User.achievements(params[1], "nick")
            const ach = VimeLibrary.Misc.achievements()

            Promise.all([player, ach]).then(async function (values) {
                const list = []

                for (const achm of values[0].achievements) {
                    for (const cat in values[1]) {
                        if (cat === "token") continue
                        for (const ac of values[1][cat]) {
                            if (ac.id === achm.id) {
                                list.push([cat, ac.title])
                            }
                        }
                    }
                }

                list.sort()

                let rank = (await VimeUtils.getRank(values[0].user.rank, config.vimeworld.dev_token)).prefix
                rank = (rank.split('').length >= 1) ? `[${rank}] ` : ``

                const arr = new Map();
                for (const elem of list) {
                    if (arr.has(elem[0])) {
                        arr.set(elem[0], Number(arr.get(elem[0])) + 1);
                    } else {
                        arr.set(elem[0], 1);
                    }
                }

                const final = ['']

                arr.forEach((value, name) => final.push(`${name}: ${value}/${values[1][name].length}`))

                const header = (context.messagePayload)
                    ? ''
                    : `üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ ${rank}${values[0].user.username}:\n\n`
                const body = final.join('\n‚óè ')
                const footer = `\n\nüìÉ –í—Å–µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: ${values[0].achievements.length}`

                const mess = new Mess.Message(header, body, footer)

                context.reply({
                    message: await mess.get(),
                    keyboard: Keyboard.builder()
                        .textButton({
                            label: "üë®‚Äçüíª –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                            payload: `stats:${values[0].user.username}`,
                            color: Keyboard.SECONDARY_COLOR
                        })
                        .textButton({
                            label: "üëï –°–∫–∏–Ω",
                            payload: `skin:${values[0].user.username}`,
                            color: Keyboard.SECONDARY_COLOR
                        })
                        .inline()
                })
            })
        })
    } catch (e) {
        context.reply(`‚ö† –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n${e}`)
    }
}

module.exports.runPayload = async (context, params) => {
    this.run(context, params)
}