const {Keyboard} = require('vk-io')
const axios = require('axios')

module.exports.info = {
    name: 'm_info',
    usage: "",
    aliases: ['info_m', 'm_info', '–º_–∏–Ω—Ñ–æ', 'minfo', '–º–∏–Ω—Ñ–æ', '–∏–Ω—Ñ–æ–º', '–∏–Ω—Ñ–æ_–º'],
    description: '–æ–ø–∏—Å–∞–Ω–∏–µ –ú–æ–¥–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ VimeWorld',
    permission: 1,
    enabled: true,
    sponsor: [],
    help: true
};

module.exports.run = async (context, params) => {
    try {
        if (!params[1]) {
            context.send({
                message: `üìä –í—ã–±–µ—Ä–∏—Ç–µ –ú–æ–¥–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä–æ–º –í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å:`,
                reply_to: context.message.id,
                keyboard: Keyboard.builder()
                    .textButton({
                        label: "Vime",
                        payload: `m_info:vime`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .textButton({
                        label: "Explore",
                        payload: `m_info:explore`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .row()
                    .textButton({
                        label: "Discover",
                        payload: `m_info:discover`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .textButton({
                        label: "Empire",
                        payload: `m_info:empire`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .row()
                    .textButton({
                        label: "Wurst",
                        payload: `m_info:wurst`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .textButton({
                        label: "Flair",
                        payload: `m_info:flair`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .row()
                    .textButton({
                        label: "Hoden",
                        payload: `m_info:hoden`,
                        color: Keyboard.PRIMARY_COLOR
                    })
                    .inline(),
            })
            return
        }
        const servers = await axios.get(`http://launcher.vimeworld.com/data/servers.php`)
        params = params[1]
        const info = {
            vime: {
                smile: "üõ∏",
                name: "Vime",
                base: "SkyTech",
                pvp: "PvE",
                version: servers.data[2].version,
                host: servers.data[2].host,
                port: servers.data[2].port,
                desc: "–í—ã–∂–∏–≤–∞—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –º–∏—Ä–µ –ª–µ–≥–∫–æ - –º–Ω–æ–≥–æ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –∏ –∏–∑–æ–±–∏–ª–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤. –ù–æ –Ω–∞ Vime –≤—Å–µ –ø–æ-–¥—Ä—É–≥–æ–º—É: –∑–¥–µ—Å—å –≤–∞—à–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –ª–∏—á–Ω–æ–º—É –æ—Å—Ç—Ä–æ–≤—É.",
                violations: `https://forum.vimeworld.com/forum/10-vime/`,
                idea: `https://forum.vimeworld.com/forum/91-vime/`,
                personal: `https://forum.vimeworld.com/forum/24-vime/`,
            },
            explore: {
                smile: "‚ú®",
                name: "Explore",
                base: "Galactic",
                //pvp: servers.data[3].desc.replace(/<[^>]+>/g,'').trim().split("\n")[2].split(" ")[3],
                pvp: "PvP",
                version: servers.data[3].version,
                host: servers.data[3].host,
                port: servers.data[3].port,
                desc: "–°—Ç—Ä–æ–π—Ç–µ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–∞–∫–µ—Ç—ã, –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–π—Ç–µ –ø–æ –≥–∞–ª–∞–∫—Ç–∏–∫–µ –≤ –ø–æ–∏—Å–∫–∞—Ö –∏–Ω–æ–ø–ª–∞–Ω–µ—Ç–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤.",
                violations: `https://forum.vimeworld.com/forum/12-explore/`,
                idea: `https://forum.vimeworld.com/forum/93-explore/`,
                personal: `https://forum.vimeworld.com/forum/26-explore/`,
            },
            discover: {
                smile: "üì≤",
                name: "Discover",
                base: "Hi-Tech",
                pvp: servers.data[4].desc.replace(/<[^>]+>/g, '').trim().split("\n")[2].split(" ")[3],
                version: servers.data[4].version,
                host: servers.data[4].host,
                port: servers.data[4].port,
                desc: servers.data[4].desc.replace(/<[^>]+>/g, '').trim().split("\n")[1] + " " + servers.data[4].desc.replace(/<[^>]+>/g, '').trim().split("\n")[3],
                violations: `https://forum.vimeworld.com/forum/13-discover/`,
                idea: `https://forum.vimeworld.com/forum/94-discover/`,
                personal: `https://forum.vimeworld.com/forum/27-discover/`,
            },
            empire: {
                smile: "üí´",
                name: "Empire",
                base: "Magic",
                //pvp: servers.data[5].desc.replace(/<[^>]+>/g,'').trim().split("\n")[2].split(" ")[3],
                pvp: "PvP",
                version: servers.data[5].version,
                host: servers.data[5].host,
                port: servers.data[5].port,
                desc: servers.data[5].desc.replace(/<[^>]+>/g, '').trim().split("\n")[1],
                violations: `https://forum.vimeworld.com/forum/15-empire/`,
                idea: `https://forum.vimeworld.com/forum/95-empire/`,
                personal: `https://forum.vimeworld.com/forum/29-empire/`,
            },
            wurst: {
                smile: "üê±",
                name: "Wurst",
                base: "Pixelmon",
                pvp: servers.data[6].desc.replace(/<[^>]+>/g, '').trim().split("\n")[3].split(" ")[3],
                version: servers.data[6].version,
                host: servers.data[6].host,
                port: servers.data[6].port,
                desc: servers.data[6].desc.replace(/<[^>]+>/g, '').trim().split("\n")[1] + " " + servers.data[6].desc.replace(/<[^>]+>/g, '').trim().split("\n")[2],
                violations: `https://forum.vimeworld.com/forum/54-wurst/`,
                idea: `https://forum.vimeworld.com/forum/96-wurst/`,
                personal: `https://forum.vimeworld.com/forum/52-wurst/`,
            },
            flair: {
                smile: "üî®",
                name: "Flair",
                base: "TConstruct",
                pvp: "PvE",
                version: servers.data[7].version,
                host: servers.data[7].host,
                port: servers.data[7].port,
                desc: servers.data[7].desc.replace(/<[^>]+>/g, '').trim().split("\n")[1],
                violations: `https://forum.vimeworld.com/forum/11-flair/`,
                idea: `https://forum.vimeworld.com/forum/92-flair/`,
                personal: `https://forum.vimeworld.com/forum/25-flair/`,
            },
            hoden: {
                smile: "üíê",
                name: "Hoden",
                base: "Classic",
                pvp: servers.data[8].desc.replace(/<[^>]+>/g, '').trim().split("\n")[3].split(" ")[3],
                version: servers.data[8].version,
                host: servers.data[8].host,
                port: servers.data[8].port,
                desc: servers.data[8].desc.replace(/<[^>]+>/g, '').trim().split("\n")[1],
                violations: `https://forum.vimeworld.com/forum/66-hoden/`,
                idea: `https://forum.vimeworld.com/forum/97-hoden/`,
                personal: `https://forum.vimeworld.com/forum/69-hoden/`,
            },
        }

        if (!info[params.toLowerCase()]) {
            return context.send({
                message: `üíî –°–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`,
                reply_to: context.message.id,
            })
        }

        context.send({
            message: `${info[params.toLowerCase()].smile} {${info[params.toLowerCase()].pvp}} ${info[params.toLowerCase()].name}`
                + `\n–í–µ—Ä—Å–∏—è: ${info[params.toLowerCase()].version}`
                + `\n–†–µ–∂–∏–º: ${info[params.toLowerCase()].base}`
                // + `\n–°–ª–µ–¥—É—é—â–∏–π —Ä–µ—Å—Ç–∞—Ä—Ç: ${restart}\n`
                + `\n\nüé´ –û–ø–∏—Å–∞–Ω–∏–µ: ${info[params.toLowerCase()].desc}`
                + `\nüíª IP: ${info[params.toLowerCase()].host}:${info[params.toLowerCase()].port}`
                + `\n\nüìÇ –†–∞–∑–¥–µ–ª—ã:`
                + `\n‚óè –ñ–∞–ª–æ–±—ã: ${info[params.toLowerCase()].violations}`
                + `\n‚óè –ò–¥–µ–∏: ${info[params.toLowerCase()].idea}`
                + `\n‚óè –ó–∞—è–≤–∫–∏: ${info[params.toLowerCase()].personal}`,
            reply_to: context.message.id,
            dont_parse_links: true,
        })
    } catch (e) {
        context.reply(`‚ö† –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n${e}`)
    }
};

module.exports.runPayload = async (context) => {
    this.run(context, context.messagePayload.split(':'))
};