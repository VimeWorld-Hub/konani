const messages = require('../libs/messages')
const config = require('../config')
const vimeLibrary = require('../libs/vimelibrary')

const VimeLibrary = new vimeLibrary.User(config.vimeworld.dev_token)
const VimeUtils = new vimeLibrary.Utils()

module.exports.info = {
    name: 'friends',
    usage: "<–∏–≥—Ä–æ–∫>",
    aliases: ['friends', '–¥—Ä—É–∑—å—è', '—Ñ—Ä–µ–Ω–¥—Å', '—Ñ—Ä–µ–Ω–¥—ã', 'f'],
    description: '–¥—Ä—É–∑—å—è –∏–≥—Ä–æ–∫–∞',
    permission: 1,
    enabled: true,
    sponsor: [],
    help: true
};

module.exports.run = async (context, delim) => {
    if (!delim) delim = context.text.split(' ')

    if (!delim[1]) return context.reply(`üîé –í—ã –∑–∞–±—ã–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${delim[0]} <–Ω–∏–∫–Ω–µ–π–º> <–∏–≥—Ä–∞>?`)

    if (delim[1].toLowerCase().includes("@me")) {
        const get = await new messages.User().getNick(context)
        if (get) {
            delim[1] = get
        } else {
            return context.send({
                message: `üì≤ –í—ã –µ—â—ë –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª–∏ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º.\n\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π: /setnick <–Ω–∏–∫>`,
                reply_to: context.message.id
            })
        }
    }
    const symbols = delim[1].split('')
    if (!await messages.testUsername(delim[1])) return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ª–∞—Ç–∏–Ω–∏—Ü—ã, —Ü–∏—Ñ—Ä –∏ _`)

    if ((symbols.length < 3 || symbols.length > 16) && symbols[0] !== "=")
        return context.reply(`‚ö† –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –æ—Ç 3-—Ö –¥–æ 16-–∏ —Å–∏–º–≤–æ–ª–æ–≤`)

    const player = await VimeLibrary.friends(delim[1], 'nick')
    if (!player.user || !player.user.id) return context.reply(`üö´ –ò–≥—Ä–æ–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–Ω–µ–π–º–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
    else if (player.friends.length < 1) return context.reply(`üö∑ –£ ${(await VimeUtils.getRank(player.user.rank, config.vimeworld.dev_token)).prefix}${player.user.username} –Ω–µ—Ç –¥—Ä—É–∑–µ–π.`)

    const friendsIDs = []
    const friends = ['']

    for (const friend of player.friends) {
        friendsIDs.push(friend.id)
    }

    const friendsActivity = await VimeLibrary.sessionBig(friendsIDs)

    await VimeUtils.rankCache(config.vimeworld.dev_token)
    for (const friend in player.friends) {
        const online = (friendsActivity[friend].online.value) ? 'üåï' : 'üåë'
        const rank = await VimeUtils.getRank(player.friends[friend].rank, config.vimeworld.dev_token)

        friends.push(`${online} ${(rank.prefix.split('').length >= 1) ? `[${rank.prefix}] ` : ``}${player.friends[friend].username}`)
    }

    friends.sort()
    friends.push('')
    friends.reverse()
    const rank = await VimeUtils.getRank(player.user.rank, config.vimeworld.dev_token)

    if (friends.length >= 100) {
        await context.reply(`üë©üèª‚Äçüíª –î—Ä—É–∑—å—è ${(rank.prefix.split('').length >= 1) ? `[${rank.prefix}] ` : ``}${player.user.username}:\n`
            + friends.slice(0, 49).join('\n'))
        await context.send(friends.slice(49, 100).join('\n'))
        context.send(friends.slice(100, 150).join('\n')
            + `\n\nüìÉ –í—Å–µ–≥–æ: ${player.friends.length}`)
    } else if (friends.length >= 50) {
        await context.reply(`üë©üèª‚Äçüíª –î—Ä—É–∑—å—è ${(rank.prefix.split('').length >= 1) ? `[${rank.prefix}] ` : ``}${player.user.username}:\n`
            + friends.slice(0, 49).join('\n'))
        context.send(friends.slice(49, 100).join('\n')
            + `\n\nüìÉ –í—Å–µ–≥–æ: ${player.friends.length}`)
    } else {
        context.reply(`üë©üèª‚Äçüíª –î—Ä—É–∑—å—è ${(rank.prefix.split('').length >= 1) ? `[${rank.prefix}] ` : ``}${player.user.username}:\n`
            + friends.join('\n')
            + `\n\nüìÉ –í—Å–µ–≥–æ: ${player.friends.length}`)
    }

};

module.exports.runPayload = async (context) => {
    this.run(context, context.messagePayload.split(":"))
};